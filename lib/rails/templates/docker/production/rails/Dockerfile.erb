FROM ruby:<%= ruby_version %> as builder

ENV RAILS_ENV=production
ENV NODE_ENV=production

# install common dev libs
RUN apt-get update -qq && apt-get install -y \
    build-essential git
<% if database == "mysql" %>
# install mysql
RUN apt-get update -qq && apt-get install -y libmysqlclient-dev mysql-client
<% elsif database == "postgresql" %>
# install postgresql
RUN apt-get update -qq && apt-get install -y libpq-dev postgresql-client
<% end %>

# Install Nodejs 10.x
RUN curl -sL https://deb.nodesource.com/setup_10.x | bin/bash -\
  && apt-get install -y nodejs

WORKDIR /app

# ************Install Ruby gems***************************
# Invalidate gems cache if change Gemfile or Gemfile.lock
COPY Gemfile Gemfile.lock /app/
RUN bundle install -j 4 --without development test staging --deployment
# ******************************************************

# ********Install Node packages************************
# Invalidate node_modules cache if package-lock.json change
COPY package.json package-lock.json /app/
RUN npm ci
# ****************************************************

COPY . .
RUN rails assets:precompile

# *******************************************
# **************** Multi Stage **************
# *******************************************
FROM ruby:<%= ruby_version %>

ENV RAILS_ENV=production
ENV NODE_ENV=production

<% if database == "mysql" %>
# install mysql
RUN apt-get update -qq && apt-get install -y mysql-client ยบ
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
<% elsif database == "postgresql" %>
# install postgresql
RUN apt-get update -qq && apt-get install -y postgresql-client \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
<% end %>
# Install Nodejs 10.x
RUN curl -sL https://deb.nodesource.com/setup_10.x | bin/bash -\
  && apt-get install -y nodejs

WORKDIR /app

# ************Copy only Rails app, prevent copy unnecessary files (.dockerignore don't work)***************************
COPY --from=builder /app/app /app/app
COPY --from=builder /app/config /app/config
COPY --from=builder /app/bin /app/bin
COPY --from=builder /app/db /app/db
COPY --from=builder /app/lib /app/lib
COPY --from=builder /app/public /app/public
COPY --from=builder /app/vendor /app/vendor
COPY --from=builder /app/Gemfile /app/Gemfile.lock app/Rakefile /app/config.ru /app/
# *********************************************************************************************************************

COPY --from=builder /usr/local/bundle /usr/local/bundle
COPY --from=builder /app/docker/production/rails/entrypoint.sh /app/docker/production/rails/entrypoint.sh

CMD ["/app/docker/production/rails/entrypoint.sh"]
